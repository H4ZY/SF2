// =============================	README		=============================		README		=============================
//
//		This profiles example may contain outdated, incorrect or missing info. There is a lot of stuff in SF2 Modified, an insane amount of complexity that often requires high maintenance.
// 		This is the most accurate listing of boss config settings in Slender Fortress Modified, spanning as far back as post 0.2.8.
//		This guide is made for creators who want to submit bosses for any Slender Fortress Modified server.
//
//		Original documentation was provided by Kit o' Rify, template by Glubbable, maintained by Mentrillum.
//
// =============================	README		=============================		README		=============================
// Slender Fortress - Boss Profiles
//
// Here is where all data about a boss is put, such as their behavior, sanity increase/decrease rates, turnrate, animations, appear chance, etc.
// Some fields are required to be put in the profile data, but most of them are optional. All values involving time are in seconds unless stated otherwise.
// Not all fields are required to be written in a boss's profile. Optional fields will have a default value.
//
// Any sections ( {} ) abbrieviated with "sound_" will have its contents automatically precached and put in the server downloads table. Some of them also have several keyvalues that
// allows you to change how the sound is played in the game, including _channel, _pitch, _volume, _level, _cooldown_min, and _cooldown_max. Of course, they're all optional, but this 
// mostly only applies to boss type 2 sounds and proxy sounds.
//
// For example:
//
// 	"sound_chasingenemy"
//	{
//		"1"	"cof/slowerno/idle1.wav"
//		"2"	"cof/slowerno/idle2.wav"
//	}
//
//	"sound_chasingenemy_cooldown_min"	"1.5"
//	"sound_chasingenemy_cooldown_max"	"2.1"
//	"sound_chasingenemy_volume"	"0.7" //Do not go over 1.0
//	"sound_chasingenemy_pitch" "100" //Values between 1 and 255 work, no decimals must be used.
//
// Any other mentions of the word "section" involves sections of lines enclosed with braces ( {} ), like the example.
// Sections list their content one by one, each assigned by a number that increases as more content is inserted like the example. The content numbers HAVE to be in sequence,
// or else the gamemode might read a non-existent value and/or not be able to read that value at all. Some sections only support 1 content, which means no matter how much
// content you put into it only the first one will be read and used. They're noted in this guide.
//
// If you are familiar with VS. Saxton Hale/Freak Fortress 2, the mod_precache, mod_download, mat_download, and download sections works the same way. If you're not, there's more information
// about it below.
//
// Put the full path of a model or a material in mod_download or mat_download WITHOUT its extension, and all their associated extensions will be automatically be put into the downloads table.
// Any section that is prefixed with sound_ will automatically be precached and queued for downloading, so there's no need to put the sounds in a download section.
//
// If for any reason a download is missing, the plugin will print out a log file that can be found in addons/sourcemod/logs/sf2/, from there you can see which bosses have broken downloads. Single string downloads count as well.
// Broken downloads will not be downloaded, models will still be precached to avoid server crashing, and sounds will still be precached to avoid not precached sounds in the server.
//
// =============================================
// 		BASE KEYVALUES			
// =============================================
// These values are mandatory, however certain values depends on the type of the boss.
// "name" - An easy-to-read name of the boss. Can be utilized for menus, etc.
// "type" - Defines the type that the boss will be. Here is the current available types.
// -------------------------------------------------------------------------------------
// Type 0: Teleporting Boss - Can only teleport to move around, uses static to kill. (Currently unavailable!).
// Type 1: Statue Boss - Can only move when not being observed. Only moves when in possible visual range of a player.
// Type 2: Chaser Boss - Wanders around the level and chases players based on FoV & Noise Conditions.
//
// "model" - Model path of the boss's main model.
// "model_averagedist" - The boss will change its model to this if it approaches from an average distance from a player. Only for boss type 1.
// "model_closedist" - The boss will change its model to this if it approaches from an average distance from a player. Only for boss type 1.
// "model_scale" - How big the boss's model should be (will not affect hitboxes).
// "eye_pos" - Where (relative to the boss's origin) the eyes of the boss is located. This is for visibility/space checks.
// "mins" / "hull_mins" - A vector that indicates the lowest corner of the boss's collision box. This is for visibility/space checks. In most cases, all values should either be negative or 0, and the third value should be 0.
// "maxs" / "hull_maxs" - A vector that indicates the maximum large the game should consider the boss to be. This is for visibility/space checks. In most cases, all values should either be positive or 0, and the third value should be positive.
// "kill_radius" - If a player gets this close to the boss, they will be caught by them.
// "use_raid_hitbox" - Boolean (0/1) - This value should only be used for RAID and Boxing bosses, this allows the "mins" and "maxs" value to be used for the boss' hitbox, avoid goind overboard with those values.
//
// "kill_weapontype" - String (256) - Unlike the attack weapon kill icons, this will attempt to be used if no attack kill icon is present, or you can use it for kill_radius bosses.
// Requires "attack_weaponsenable" to be set to 1.
// "kill_weapontypeint" - This should only be used for headshots, backstabs, or anything with special kill icons.
//
// "copy" - Boolean (0/1) that determines if the boss should make copies of itself to chase separated players. Default value is "0".
// "copy_max" - Determines how many copies can be active in one time.
// "copy_max_easy" - Determines how many copies can be active on the Easy difficulty, default is the value of copy_max.
// "copy_max_hard" - Determines how many copies can be active on Hardcore, default is the value of copy_max.
// "copy_max_insane" - Determines how many copies can be active on Insane, default is the value of copy_max_hard.
// "copy_max_nightmare" - Determines how many copies can be active on Nightmare, default is the value of copy_max_insane.
// "copy_max_apollyon" - Determines how many copies can be active on Apollyon, default is the value of copy_max_nightmare.
//
// "skin" - Sets the skin that should be used on the boss. Defaults to "0".
// "skin_max" - Sets the max amount of possible skins on the boss. A random skin will be picked that ranges from the values set in "skin" & "skin_max". Defaults to "0".
//
// "stepsize" - Defines the size of each step a boss takes. Default is "18". Do not change unless you really need to do so.
//
// SECTIONS:
// "mod_download" - Models that are to be downloaded should be put here. Insert the full model path (starting with "models/"), but leave out the .mdl extension. The mdl, phy, dx80.vtx, dx90.vtx, sw.vtx, and the vvd extensions of the model will automatically be queued for downloading.
// "mod_precache" - Models that are associated with this boss should be inserted here. Insert the full model path (starting with "models/"). YOU MUST DO THIS OR THE BOSS WILL CRASH UPON SPAWNING!
// "mat_download" - Materials that are to be downloaded should be put here. Insert the full material path (starting with "materials/"), but leave out the .vmt or .vtf extension. The vmt and the vtf extensions will automatically be queued for downloading.
// "download" - Put everything else needed for downloading here that doesn't fit within "mod_download" or "mat_download". List out all contents with their extensions. This is useful if "mod_download" or "mat_download" queues files that do not exist, but you would have to enter each file one by one.
// "sound_move" - Looping sound that is played when the boss moves. Only for Boss Type 1. Only the first sound listed will be used. 
// "sound_player_deathcam" - Sound(s) played to the player when the death-cam sequence starts.
// "sound_player_deathcam_all" - Sound(s) played to everyone when the death-cam sequence starts for a player from this boss.
// "sound_player_death" - DEPRECATED, use "sound_player_deathcam" instead!
// "sound_player_death_all" - DEPRECATED, use "sound_player_deathcam_all" instead!
// "sound_player_death_20dollars" - Sound(s) that will play to the client if a boss kills them if $20 is enabled.
// "sound_attack_killed" - Sound(s) played locally when the boss kills a player.
// "sound_attack_killed_all" - Sound(s) played to everyone when the boss kills a player.
// "sound_attack_killed_client" - Sound(s) played to the player whenever the boss kills them.
// "sound_scare_player" - Sound(s) played to the player when he gets a scare.
// "sound_music" - Override the sound pages.
// "sound_static" - Looping sound that is played to the player when the boss starts draining his Sanity. Only the first sound listed will be used.
// "sound_20dollars" - Looping sound that is played alongside "sound_static" when $20 is enabled. Only the first sound listed will be used.
// "sound_jumpscare" - Sound that is played to the player when the boss uses the Jumpscare feature against him. Only the first sound listed will be used.
// "sound_music_loop" - If a music set in the section "sound_music" is a .mp3 file you can use this key for loop it, or use 9999 like a lot of people do.
// "overlay_player_death" - Screen overlay that is displayed to the player during the death-cam sequence. Don't forget to add the material to the mat_download/download section! Only the first material listed will be used.
// "overlay_jumpscare" - Screen overlay that is displayed to the player when the boss uses the Jumpscare feature against him. Don't forget to add the material to the mat_download/download section! Only the first material listed will be used.
//
// =====================================================
// 		BOSS SELECTION KEYVALUES		
// =====================================================
//
// "enable_random_selection" - Boolean (0/1) that determines if the boss can be selected at random at start of a new boss round. Default value is "1".
// "enable_random_selection_boxing" - Boolean (0/1) that determines if the boss can be selected randomly for Boxing Maps only. Default value is "0".
//
// =====================================================
// 		BOSS KILL EFFECTS		
// =====================================================
//
// "cloak_ragdoll_on_kill" - Boolean (0/1) that determines if bosses should cloak ragdolls on kill, similar to the Your Eternal Reward effect, not a silent killer.
// "decap_ragdoll_on_kill" - Boolean (0/1) that determines if bosses should decapitate ragdolls on kill.
// "gold_ragdoll_on_kill" - Boolean (0/1) that determines if bosses should turn ragdolls into gold on kill.
// "ice_ragdoll_on_kill" - Boolean (0/1) that determines if bosses should turn ragdolls to ice statues on kill.
// "electrocute_ragdoll_on_kill" - Boolean (0/1) that determines if bosses should electrocute ragdolls on kill, similar to being killed with full Ubercharge.
// "ash_ragdoll_on_kill" - Boolean (0/1) that determines if bosses should ash ragdolls on kill.
// "disintegrate_ragdoll_on_kill" - Boolean (0/1) that determines if bosses should ash ragdolls on kill. Yes, I know its the same, but more bosses use disintegrate_ragdoll_on_kill for some reason.
//
// =====================================================
// 		CUSTOM OUTLINE KEYVALUES		
// =====================================================
//
// Boss outlines can either be seen in Wall Hax, in ghost mode, whilst a proxy, or during Boxing matches.
// "customizable_outlines" - Boolean (0/1) that determines if bosses should receive custom outline colors provided by the boss creator.
// "outline_color_r" - Int (0 > 255) - Determines the RED value of the outline color. Defaults to "255".
// "outline_color_g" - Int (0 > 255) - Determines the GREEN value of the outline color. Defaults to "255".
// "outline_color_b" - Int (0 > 255) - Determines the BLUE value of the outline color. Defaults to "255".
// "outline_color_transparency" - Int (0 > 255) - Determines the transparency/alpha value of the outline color. Defaults to "255".
//
// =====================================================
// 		COMPANION SPAWNING SYSTEM			
// =====================================================
//
// Companion Spawning allows for Bosses to spawn in additional bosses with them upon selection.
// This basically allows for dual or grouped bosses to be deployed for the round.
//
// An example of this will be provided from Slender's profile.
//
//		"companions"
//		{
//			"1"	"kate" // Name of the bosses root profile key.
//		}
//
// Bosses listed here will be spawned alongside this boss whenever it is chosen. 
// NOTE: Companions cannot spawn in the boss that spawns them.
// NOTE2: Bosses cannot spawn in companion copies of themselves.
//
// This can be placed anywhere in the profile, but we prefer to place it first before all the other file listings.
//
// =============================================
// 		ANGER KEYVALUES	- MOSTLY UNAVAILABLE		
// =============================================
//
// Anger is a value that indicates how "frustrated" the boss is. It is calculated by how fast players collect pages and the difficulty.
//
// "anger_start" - The starting value of the boss's anger. Should be well around 1.0
// "anger_page_time_diff" - If players collect pages below this value (in seconds), anger will increase.
// "anger_page_add" - How much anger to add when players collect pages below the value defined in "anger_page_time_diff".
//
// =============================================
// 		SANITY KEYVALUES		
// =============================================
//
// Each player begins with 100 Sanity points. If a player's Sanity drops to 0, he will suicide. The rate which Sanity increases/decreases depends on the boss
// encountered. Only one boss at a time can control a player's Sanity rate. The controlling boss is determined on the anger level of the boss. The higher the
// anger, the more priority it has over other bosses. Multiple bosses cannot stack their rates against a player.
// "static_on_look" - Boolean (0/1) which indicates whether or not looking at the boss will cause the player's Sanity to lower.
// "static_on_radius" - Boolean (0/1) which indicates whether or not being near the boss will cause the player's Sanity to lower.
// "static_rate" - The base rate which sanity will lower for players encountering this boss in terms of 5 Sanity points per x seconds.
// "static_rate_decay" - The base rate which sanity will regenerate for players encountering this boss in terms of 5 Sanity points per x seconds.
// "static_radius" - If "static_on_radius" is set to 1, then a player will start to lose Sanity when he's this close to the boss and the boss can see him.
// NOTE: Static Radius can be affected by difficulty via _hard, _insane, _nightmare, & _apollyon prefixes. Example: "static_radius_hard".
//
// =============================================
// 		SCARE KEYVALUES			
// =============================================
// In Slender Fortress, a "scare" occurs when the player sees the boss after a certain amount of time has passed since the time he last saw it. This results
// in a temporary speed boost. The likelihood of a player getting scared depends on the boss.
//
// "scare_radius" - The maximum distance that the player can be from the boss in order to get a "scare".
// "scare_cooldown" - How long after the last scare that the player will be able to be scared again.
//
// =============================================================
// 		TELEPORTATION BEHAVIOR KEYVALUES		
// =============================================================
//
// "teleport_type" - Determines teleportation behavior. Only values 0 and 2 are accepted. 0 = teleport only when no player is looking at the boss. 2 = teleport only when no player is looking at the boss AND is behind an obstruction, blocking all possible view
// "teleport_range_min" - Determines how close the boss can teleport to a player (or any player for that matter), in relation to the NavMesh.
// "teleport_range_max" - The maximum distance the boss can teleport away from a player, in relation to the NavMesh.
// "teleport_target_rest_period" - Determines how long a boss should leave its previous teleportation target alone. Default is "15.0"
// "teleport_target_persistency_period" - Determines how long a boss can consistently teleport onto its current teleportation target. Default is "9.0"
// "teleport_target_stress_min" - Determines minimum stress level of current teleportation target required before boss forcibly backs off and puts him in a rest period. Default is "0.2"
// "teleport_target_stress_max"	- Determines maximum stress level of current teleportation target required before boss - yeah, you know. Default is "0.9"
// NOTE: "teleport_target_stress_min" value will steadily increase as the boss's anger increases, in relation to "teleport_target_stress_max"
// "teleport_dist_between_copies" - Determines the distance between copies when teleporting to a target, useful for bosses you want to spawn in groups for a single target or if you want them spread out to focus multiple players at once.
// NOTE: Teleport Range Min & Max can be affected by difficulty via _hard, _insane, _nightmare & _apollyon prefixes.
// "teleport_time_min" - Minimum amount of seconds between teleports.
// "teleport_time_max" - Maximum amount of seconds between teleports.
//
// Determines how often the boss will check to see if it can teleport/spawn to another place. Thinking time intervals are determined by a random value chosen between "teleport_time_min" and "teleport_time_max".
//
// ==============================================
// 		DEATH CAM KEYVALUES		
// ==============================================
//
// The death-cam is a feature that when a player is caught via "kill_radius", his view will be forced to shift over to the boss's position via "death_cam_pos", 
// relative to the boss's true position. After a certain amount of time he will die, but during the sequence he is invincible until the sequence finishes.
// "death_cam" - Boolean (0/1) that determines whether or not the boss should have the death-cam feature enabled.
// "death_cam_pos" - Vector that determines the position relative to the boss's position that the camera should look at.
// "death_cam_overlay" - Boolean (0/1) that determines whether or not the death-cam sequence should force a screen overlay determined in the category "overlay_player_death", which will override the player's screen.
// "death_cam_time_overlay_start" - If "death_cam_overlay" is set to 1, determines how long before after a certain amount of time should the screen overlay actually appear.
// "death_cam_time_death" - Amount of time that will have to pass in the death-cam sequence before the player is forced to suicide.
//
// =============================================================
// 		PLAYER BLINK BEHAVIOR KEYVALUES			
// =============================================================
//
// "blink_look_rate_multiply" - Float value that is directly multiplied to the blink rate of a player looking at the boss. Default is "1.0".
// "blink_static_rate_multiply" - Float value that is directly multiplied to the blink rate of a player that is either near the boss or simply looking at the boss. Default is "1.0".
//
// =============================================
// 		JUMPSCARE KEYVALUES		
// =============================================
// Probably the worst name I've given to this feature, but it's basically a screen overlay + sound that will play on a player's screen if the boss teleports in front of 
// the player or near the player.
//
// "jumpscare" - Boolean (0/1) - Determines whether or not the boss should use the jumpscare feature.
// "jumpscare_no_sight" - Boolean (0/1) - Determines if sight check should be ignored when the boss spawns into possible sight of player(s). Defaults to "0".
// "jumpscare_on_scare"	- Boolean (0/1) - Determines if a Jumpscare should be performed upon being scared by the boss. Defaults to "0".
//
// "jumpscare_distance" - Determines the minimum distance the boss has to be to a player when it teleports to the player in order for the jumpscare feature to be used.
// "jumpscare_duration" - Determines how long the screen overlay of the jumpscare feature will last on a player's screen.
// "jumpscare_cooldown" - Determines how long before the boss could use the jumpscare feature again. This is ignored when the boss teleports in a player's sight.
// NOTE: Jumpscare Distance, Duration and Cooldown can be affected by difficulty via _hard, _insane, _nightmare, & _apollyon prefixes.
//
// =============================================
// 		PROXY KEYVALUES			
// =============================================
// A proxy is a minion of Slender Man that unquestionably does his bidding. Could also include the inability to speak coherent sentences.
// In Slender Fortress, a proxy is a randomly-chosen player on BLU team that will spawn within the RED play area. Their main objective is to kill the RED. Their damage scale can be adjusted 
// and backstab damage has been adjusted to deal only 10% of the target's max health instead of the usual 200%.
// Also to note, proxies spawn in waves and in time-intervals, with the time between waves defined by a randomly-chosen value between "proxies_spawn_cooldown_min" and "proxies_spawn_cooldown_max".
// Proxies also start out with 100 Control points, which will drain as the proxy lives. If the proxy has no more Control points, it will automatically suicide.
// "proxies" - Boolean (0/1) that determines whether or not the boss should use the Proxy feature.
// "proxies_teleport_enabled" - Boolean (0/1) - Determines if Proxies for the boss should spawn in normally or not.
// "proxies_classes" - List of classes that are allowed for the proxy. Separate each class name with a space. Available class names are: scout, soldier, sniper, demoman, heavyweapons, medic, pyro, spy, engineer.
// "proxies_max" - Determines the maximum amount of proxies the boss can have playing at once.
// "proxies_spawn_chance_min" - Similarly functions to "appear_chance_min".
// "proxies_spawn_chance_max" - Similarly functions to "appear_chance_max".
// "proxies_spawn_chance_threshold" - Similarly functions to "appear_chance_threshold".
// "proxies_spawn_cooldown_min" - Determines the minimum cooldown time of spawning proxies.
// "proxies_spawn_cooldown_max" - Determines the maximum cooldown time of spawning proxies.
// "proxies_spawn_num_min" - Determines the minimum amount of proxies the boss can spawn in a wave.
// "proxies_spawn_num_max" - Determines the maximum amount of proxies the boss can spawn in a wave.
// "proxies_controldrainrate" - Determines how long 1 Control Point out of 100 will last (in seconds).
// "proxies_controlgain_hitenemy" - Determines how many Control points the proxy will receive after hitting an enemy.
// "proxies_controlgain_hitbyenemy" - Determines how many Control points the proxy will receive after getting hit by a player.
// "proxies_damage_scale_vs_enemy" - Damage scale that is applied to damage that the proxy deals against enemies. Default is "1.0". Do not use % in these.
// "proxies_damage_scale_vs_self" - Damage scale that is applied to damage that the proxy recieves from enemies. Default is "1.0". Do not use % in these.
// "proxies_allownormalvoices" - Boolean (0/1) that determines whether or not proxies are allowed to use their normal voices (including the voice menu). Default is "1".
// "proxies_zombie"	- Boolean (0/1) that determines whether or not proxies will use the Zombie Soul model. Default is "0".
//
// "proxies_death_anim_all" - Death animation that is used for the boss's proxies. Used if the proxy's class doesn't have its own "proxy_death_anim_<class>" section or gets a blank death anim from its section.
// "proxies_death_anim_scout" - Death animation that is used for the boss's proxies if the proxy's class is a Scout.
// "proxies_death_anim_soldier" - Death animation that is used for the boss's proxies if the proxy's class is a Soldier.
// "proxies_death_anim_sniper" - Death animation that is used for the boss's proxies if the proxy's class is a Sniper.
// "proxies_death_anim_demoman" - Death animation that is used for the boss's proxies if the proxy's class is a Demoman.
// "proxies_death_anim_heavy" - Death animation that is used for the boss's proxies if the proxy's class is a Heavy.
// "proxies_death_anim_medic" - Death animation that is used for the boss's proxies if the proxy's class is a Medic.
// "proxies_death_anim_pyro" - Death animation that is used for the boss's proxies if the proxy's class is a Pyro.
// "proxies_death_anim_spy" - Death animation that is used for the boss's proxies if the proxy's class is a Spy.
// "proxies_death_anim_engineer" - Death animation that is used for the boss's proxies if the proxy's class is a Engineer.
//
// "proxies_death_anim_frames_all" - How many frames from the animation must be played, before drop the ragdoll. Used if the proxy's class doesn't have its own "proxy_death_anim_frames_<class>" section or gets a blank death anim frames from its section.
// "proxies_death_anim_frames_scout" - How many frames from the animation must be played, before drop the ragdoll if the proxy's class is a Scout.
// "proxies_death_anim_frames_soldier" - How many frames from the animation must be played, before drop the ragdoll if the proxy's class is a Soldier.
// "proxies_death_anim_frames_sniper" - How many frames from the animation must be played, before drop the ragdoll if the proxy's class is a Sniper.
// "proxies_death_anim_frames_demoman" - How many frames from the animation must be played, before drop the ragdoll if the proxy's class is a Demoman.
// "proxies_death_anim_frames_heavy" - How many frames from the animation must be played, before drop the ragdoll if the proxy's class is a Heavy.
// "proxies_death_anim_frames_medic" - How many frames from the animation must be played, before drop the ragdoll if the proxy's class is a Medic.
// "proxies_death_anim_frames_pyro" - How many frames from the animation must be played, before drop the ragdoll if the proxy's class is a Pyro.
// "proxies_death_anim_frames_spy" - How many frames from the animation must be played, before drop the ragdoll if the proxy's class is a Spy.
// "proxies_death_anim_frames_engineer" - How many frames from the animation must be played, before drop the ragdoll if the proxy's class is a Engineer.
// SECTIONS:
// "sound_proxy_spawn" - Sound(s) that the proxy will make when it spawns into the map. Supports custom channel, pitch, level, volume, and flags.
// "sound_proxy_idle" - Sound(s) that the proxy will make while it's alive. Supports custom cooldown_min, cooldown_max, channel, pitch, level, volume, and flags. (This used to not work for a long time)
// "sound_proxy_hurt" - Sound(s) that the proxy will make when an enemy hurts it. Supports custom cooldown_min, cooldown_max, channel, pitch, level, volume, and flags.
// "sound_proxy_death" - Sound(s) that the proxy will make when an enemy kills it. Supports custom channel, pitch, level, volume, and flags.
// "mod_proxy_all" - Model(s) that are used for the boss's proxies. Used if the proxy's class doesn't have its own "mod_proxy_<class>" section or gets a blank model from its section.
// "mod_proxy_scout" - Model(s) that are used for the boss's proxies if the proxy's class is a Scout.
// "mod_proxy_soldier" - Model(s) that are used for the boss's proxies if the proxy's class is a Soldier.
// "mod_proxy_sniper" - Model(s) that are used for the boss's proxies if the proxy's class is a Sniper.
// "mod_proxy_demoman" - Model(s) that are used for the boss's proxies if the proxy's class is a Demoman.
// "mod_proxy_heavyweapons" - Model(s) that are used for the boss's proxies if the proxy's class is a Heavy.
// "mod_proxy_medic" - Model(s) that are used for the boss's proxies if the proxy's class is a Medic.
// "mod_proxy_pyro" - Model(s) that are used for the boss's proxies if the proxy's class is a Pyro.
// "mod_proxy_spy" - Model(s) that are used for the boss's proxies if the proxy's class is a Spy.
// "mod_proxy_engineer" - Model(s) that are used for the boss's proxies if the proxy's class is an Engineer.
// =============================================
// 		CHASER TYPE KEYVALUES		
// =============================================
// These keyvalues can only be used by bosses whose types are 2.
// "fov" - The boss's field of view in degrees.
//
// "wake_radius" - If a player gets this close to the boss the boss will immediately be notified of that player's position.
// "walkspeed" - The base speed of the boss's walking speed. Affected by the difficulty modifier and anger.
// "walkspeed_max" - The maximum speed of the boss's walking speed that can be calculated. Affected by the difficulty modifier.
// "jump_speed" - How much velocity is applied upwards in a jump. Adds bosses walk speed as a speed boost. (Don't even know if this works)
//
// "wander_move" - Boolean (0/1) that determines if the boss should wander around while in idle state. Default is "1".
//
// "acceleration" - How fast a boss can turn, lower numbers mean the boss will turn slower, higher numbers mean bosses will turn quickly.
//
// "idle_lifetime" - The amount of time the boss will spend around in idle after teleporting in, once this time is up, they'll disappear.
// "idle_lifetime_easy" - Same as "idle_lifetime", except in Easy difficulty. If not set it will use the value in "idle_lifetime" instead.
// "idle_lifetime_hard" - Same as "idle_lifetime", except in Hard difficulty. If not set it will use the value in "idle_lifetime" instead.
// "idle_lifetime_insane" - Same as "idle_lifetime", except in Insane difficulty. If not set it will use the value in "idle_lifetime_hard" instead.
// "idle_lifetime_nightmare" - Same as "idle_lifetime", except in Nightmare difficulty. If not set it will use the value in "idle_lifetime_insane" instead.
// "idle_lifetime_apollyon" - Same as "idle_lifetime", except in Apollyon difficulty. If not set it will use the value in "idle_lifetime_nightmare" instead.
//
// "search_wander_time_min" - The minimum duration of how long the boss can wander before switching back to idle state. Defaults to 3.0.
// "search_wander_time_min" - The maximum duration of how long the boss can wander before switching back to idle state. Defaults to 4.5.
// "search_range" - How far the boss can see when searching for enemies.
// "search_sound_range" - How far the boss can hear players.
//
// "search_alert_gracetime" - The amount of time that the player can be in the boss's vision before the boss is allowed to go into a chasing state.
// "search_alert_gracetime_easy" - Same as "search_alert_gracetime", except in Easy difficulty. If not set it will use the value in "search_alert_gracetime" instead.
// "search_alert_gracetime_hard" - Same as "search_alert_gracetime", except in Hard difficulty. If not set it will use the value in "search_alert_gracetime" instead.
// "search_alert_gracetime_insane" - Same as "search_alert_gracetime", except in Insane difficulty. If not set it will use the value in "search_alert_gracetime_hard" instead.
// "search_alert_gracetime_nightmare" - Same as "search_alert_gracetime", except in Nightmare difficulty. If not set it will use the value in "search_alert_gracetime_insane" instead.
// "search_alert_gracetime_apollyon" - Same as "search_alert_gracetime", except in Apollyon difficulty. If not set it will use the value in "search_alert_gracetime_nightmare" instead.
//
// "search_alert_duration" - The amount of time that the boss can be alerted before returning in idle state.
// "search_alert_duration_easy" - Same as "search_alert_duration", except in Easy difficulty. If not set it will use the value in "search_alert_duration" instead.
// "search_alert_duration_hard" - Same as "search_alert_duration", except in Hard difficulty. If not set it will use the value in "search_alert_duration" instead.
// "search_alert_duration_insane" - Same as "search_alert_duration", except in Insane difficulty. If not set it will use the value in "search_alert_duration_hard" instead.
// "search_alert_duration_nightmare" - Same as "search_alert_duration", except in Nightmare difficulty. If not set it will use the value in "search_alert_duration_insane" instead.
// "search_alert_duration_apollyon" - Same as "search_alert_duration", except in Apollyon difficulty. If not set it will use the value in "search_alert_duration_nightmare" instead.
//
// "search_chase_duration" - How long the boss should chase the player. The time resets if the boss sees a player again.
// "search_chase_duration_easy" - Same as "search_chase_duration", except in Easy difficulty. If not set it will use the value in "search_chase_duration" instead.
// "search_chase_duration_hard" - Same as "search_chase_duration", except in Hard difficulty. If not set it will use the value in "search_chase_duration" instead.
// "search_chase_duration_insane" - Same as "search_chase_duration", except in Insane difficulty. If not set it will use the value in "search_chase_duration_hard" instead.
// "search_chase_duration_nightmare" - Same as "search_chase_duration", except in Nightmare difficulty. If not set it will use the value in "search_chase_duration_insane" instead.
// "search_chase_duration_apollyon" - Same as "search_chase_duration", except in Apollyon difficulty. If not set it will use the value in "search_chase_duration_nightmare" instead.
//
// NOTE: Persistency is defined as the time period that gives the boss's ability to create new paths to its target every think; in other words, be constantly aware of its position
// "search_chase_persistency_time_init" - initial persistency duration when put into chase mode.
// "search_chase_persistency_time_add_newtarget" - How much time is added to persistency once a new target is given.
// "search_chase_persistency_time_add_visible_min" - How much time is added per 0.1 seconds when the boss sees the player.
// "search_chase_persistency_time_add_visible_max" - How much time is added per 0.1 seconds when the boss sees the player.
// NOTE: Value obtained from "search_chase_persistency_time_add_visible_min" and "search_chase_persistency_time_add_visible_max" varies in a inversely proportional relationship with distance to its target
// "search_chase_persistency_time_add_attack" - How much time as added when the boss attacks
//
// "random_attacks" - Boolean (0/1) - Determines if attacks should be chosen at random, defaults to off. Must be outside of the array attacks.
//
// "attack_delay" - After the boss's attack started, damage will be applied to players within range after this amount of time.
// "attack_range" - Range of the boss's attack.
// "attack_damage" - How much damage to deal in an attack.
// "attack_damagetype" - The type of damage that the boss deals against players. This is a bitflag value.
// "attack_punchvel" - Vector that determines the amount of "view punch" dealt to players when hit by this boss's attack.
// "attack_endafter" - How long the boss's attack lasts throughout the whole thing.
// "attack_spread" - replaces "attack_fov", determines how wide (in degrees) the boss can deal damage to entities
// "attack_cooldown" - How long bosses should not use this attack after they have attacked. 
// "attack_props" - This allows bosses to attack prop_physics or anything considered breakable. Should always remain outside of the advanced attacks code.
// "attack_damageforce" - How much force is applied to prop_physics.
// "attack_damage_vs_props" - How much damage bosses can do to breakable props.
// "attack_begin_fov" - An unknown feature that stricts the bosses to only begin their attack at a certain field of view.
// "attack_disappear_upon_damaging" - Once a boss misses or hits a player, they will disappear.
// "attack_repeat" - Allows bosses to repeatedly hit their targets, if used, the attack_endafter should be doubled, tripled, or however many times you want the boss to hit the player.
// "attack_weaponsenable" - If the server has SourceTV enabled, this feature allows bosses to kill players with weapon kill icons.
// "attack_weapontypeint" - This should only be used for headshots, backstabs, or anything with special kill icons.
// "attack_weapontype" - Primarily used for weapon kill icons, to find one, kill a player with a weapon you want the boss to kill a player with, look in the console, and copy the killed with weapon name.
// "attack_lifesteal" - This boolean allows bosses to drain a player's health over time and give the boss 75% of the damage done back as health, mostly ideal for Boxing bosses.
// "attack_lifesteal_duration" - How long the boss should life steal, if this is longer than the whole attack duration, then the timer will cancel after the attack finishes.
// "attack_ignore_always_looking" - If any of the always look at target attributes are enabled, this turns off always look at target for the specific attack.
// "attack_use_on_difficulty" - Blocks the attack under set difficulty, 2 being Hardcore, 3 being Insane, 4 being Nightmare, and 5 being Apollyon. Defaults to 0.
//
// "stun_enabled" - Boolean (0/1) that determines if the boss should be able to be stunned or not.
// "stun_health" - How much damage players have to deal against the boss before it is stunned.
// "stun_health_per_player" - However many players there are on RED, the boss' stun health will be multiplied by the current number of RED players, should only be used on RAID and Boxing maps.
// "stun_health_per_scout" - However many scouts there are on RED, the boss' stun health will be multiplied by the current number of RED scouts, should only be used on RAID and Boxing maps.
// "stun_health_per_soldier" - However many soldiers there are on RED, the boss' stun health will be multiplied by the current number of RED soldiers, should only be used on RAID and Boxing maps.
// "stun_health_per_pyro" - However many pyros there are on RED, the boss' stun health will be multiplied by the current number of RED pyros, should only be used on RAID and Boxing maps.
// "stun_health_per_demoman" - However many demomans there are on RED, the boss' stun health will be multiplied by the current number of RED demomans, should only be used on RAID and Boxing maps.
// "stun_health_per_heavyweapons" - However many heavies there are on RED, the boss' stun health will be multiplied by the current number of RED heavies, should only be used on RAID and Boxing maps.
// "stun_health_per_engineer" - However many engineers there are on RED, the boss' stun health will be multiplied by the current number of RED engineers, should only be used on RAID and Boxing maps.
// "stun_health_per_medic" - However many medics there are on RED, the boss' stun health will be multiplied by the current number of RED medics, should only be used on RAID and Boxing maps.
// "stun_health_per_sniper" - However many snipers there are on RED, the boss' stun health will be multiplied by the current number of RED snipers, should only be used on RAID and Boxing maps.
// "stun_health_per_spy" - However many spies there are on RED, the boss' stun health will be multiplied by the current number of RED spies, should only be used on RAID and Boxing maps.
// "stun_duration" - Duration of the stun.
// "stun_damage_flashlight_enabled" - This allows bosses to be stunned by the flashlight, does not work with nightvision.
// "stun_damage_flashlight" - How much damage dealt per think (0.01 seconds) if the boss is exposed to a player's flashlight (damage does not stack with multiple players).
// "stun_cooldown" - How long bosses should be invulnerable to stunning after they have been stunned.
// "disappear_on_stun" - Boolean (0/1) - If toggled, once a boss finishes being stunned, they will disappear.
// By default and will remain unchanged, a boss has 30,000 general health plus however much stun health the boss starts with. If the boss' health reaches 0, they explode into money (Dosh, grab it while you can). Grabbing the money does literally nothing.
//
// SECTIONS:
// "sound_chase_music" - Looping sound that will play when the boss is chasing a player, usually a song. Only the first sound listed will be used.
// "sound_chase_visible" - Looping sound that will play alongside "sound_chase_music" when the boss can see the player. Only the first sound listed will be used.
// "sound_chasingenemy" - Sound(s) that the boss will make while chasing an enemy.
// "sound_chaseenemyinitial" - Sound(s) that the boss will make when it begins chasing an enemy.
// "sound_idle" - Sound(s) that the boss will make while in an idle or a wandering state.
// "sound_alertofenemy" - Sound(s) that the boss will make while in an alert state.
// "sound_attackenemy" - Sound(s) that the boss will make when it attacks a player.
// "sound_hitenemy" - Sound effect(s) that is played when the boss successfully hits an enemy with its melee attack.
// "sound_missenemy" - Sound effect(s) that is played when the boss ends up hitting nothing with its melee attack.
// "sound_stun" - Sound(s) that the boss will make when it gets stunned.
// "sound_footsteps" - Sound(s) that are used to simulate boss movement.
// "sound_rage" - If the boss is a Boxing boss, the boss will play the sound(s) whenever it rages. If you want separate rage sounds for different phases, use "sound_rage_2" for phase 2 and "sound_rage_3" for phase 3.
//
// EXTRAS:
// "normal_sound_hook" - Boolean (0/1) - Every time a boss switches state, they will stop all playing sounds that are idle sounds, alert sounds, and chase sounds and play whatever sound its gonna play in whatever state. 
// If a chase initial sound is present, the prior sounds will stop but the chase initial sound will play
// "multi_attack_sounds" - Boolean (0/1) - This allows bosses to use attack sounds based on the current attack index, sound_attackenemy will still work for attack index 1, but it should be sound_attackenemy_2 for the second attack index and so on up to attack index 8.
// "multi_hit_sounds" - Boolean (0/1) - This allows bosses to use hit sounds based on the current attack index, sound_hitenemy will still work for attack index 1, but it should be sound_hitenemy_2 for the second attack index and so on up to attack index 8.
// "multi_miss_sounds" - Boolean (0/1) - This allows bosses to use miss sounds based on the current attack index, sound_missenemy will still work for attack index 1, but it should be sound_missenemy_2 for the second attack index and so on up to attack index 8.
// "use_engine_sounds" - Boolean (0/1) - Upon spawning a boss, the designated "engine_sound" will play on a infinite loop unless the boss despawns, can be used on bosses like giant MvM robots.
// "engine_sound" - String (256) - Determines the looping sound that should be played when a boss spawns.
// "boss_chases_endlessly" - Boolean (0/1) - As you can guess, this makes the boss chase any player no matter what.
// "enable_boss_tilting" - Boolean (0/1) - Want your boss to tilt on slanted surfaces or clip brushes? This is the value you should use, useful for vehicle based bosses. Defaults to 0
//
// =============================================
//      AUTO-CHASE KEYVALUES
// =============================================
// As of Secret Update 4, bosses can now utilize the ability to chase players if they get alerted enough times or they make noise. Bosses will start chasing the player once they are no longer alerted, or instantly if they see set player.
// This feature is still in beta, use with caution.
//
// "auto_chase_enabled" - Boolean (0/1) - This enables/disables the auto chase feature.
// "auto_chase_count" - Int - Determines how many sounds have to be heard or how many times the boss must be alerted. Defaults to 5, recommend to set it higher than 5, maybe 20. 
//
// =============================================
// 		EFFECTS KEYVALUES		
// =============================================
// Bosses have unique effect abilities, these are light glows and steam effects. Both can be used to enhance the feel of the boss.
// You can combine effects together, so you can use three light glows and one steam effect.
// Note light colors are stricted to one color, in the future you can randomize colors on think.
// All effects should be closed with "effects" like this example.
//
// "effects"
// {
//		Code here
// }
//
// Heres a provided example of a steam effect.
//
//	"effects"
//	{
//		"steam_distortion" //Name of the steam effect
//		{
//			"type"	"steam" //Must be set to this for steam effects.
//			"event"	"constant" //Constant means it'll do the effect no matter what, this is what bosses will spawn always, so leave this value alone.
//			"origin"	"0 0 0" //You can offset this effect if you'd like.
//			"origin_custom"	"" //I don't recommend touching this, most don't know what it does.
//			"angles"	"-90 0 0" //The rotation of the steam effect, using x y and z.
//			"angles_custom"	"" //I don't recommend touching this, most don't know what it does.
//			"rendermode"	"5" //Unknown feature.
//			"renderfx"	"0" //Unknown feature.
//			"renderamt"	"255" //Transparency of steam.
//			"rendercolor"	"255 255 255 255" //The color of the steam effect, using rgb and transparency/alpha.
//			"lifetime"	"-1.0" //How long the steam should last on boss spawn, -1 means it'll last until the boss despawns.
//			"particletype"	"1" //1 is heatwave steam, 0 is normal steam.
//			"startsize"	"50" //How big the steam should start on spawn.
//			"endsize"	"50" //How big the steam should be once it despawns.
//			"basespread"	"10" //Amount of random spread.
//			"roll"	"0" //How fast the steam rolls.
//			"jetlength"	"100" //Sets the length of the steam jet.
//			"spreadspeed"	"25" //Sets the steam spred speed.
//			"speed"	"600" //The default speed at which the particles move after they spawn.
//			"rate"	"30" //The rate of particle emission. i.e. particles per second.
//		}
//	}
//
// And another using light effects.
//
//	"effects"
//	{
//		"pretty_light" //Name of the light.
//		{
//			"type"	"dynamiclight" //Must be set to this for light effects.
//			"event"	"constant" //Constant means it'll do the effect no matter what, this is what bosses will spawn always, so leave this value alone.
//			"origin"	"0 0 75" //You can offset this effect if you'd like.
//			"origin_custom"	"" //I don't recommend touching this, most don't know what it does.
//			"angles"	"0 0 0" //The rotation of the light effect, using x y and z.
//			"angles_custom"	"0 0 0" //I don't recommend touching this, most don't know what it does.
//				
//			"rendercolor"	"100 200 255 255" //The color of the light effect, using rgb and transparency/alpha.
//			"distance"	"50.0" //How far the light should cast onto the world
//			"brightness"	"8" //How bright the light should be
//			"cone"	"-1" //Set the outer (fading) angle.
//			"spawnflags"	"1" //1 does not light the world, 2 does not light props, and 0 does none of these.
//		}
//	}
//
// To get multiple light effects, you can simply copy one of the light effects, make sure both names differ from each other, and make sure the lights are noticeable.
// Getting them to be noticeable can be color of the light, the position, how they should react to props, brightness, distance, and maybe angles.
// Careful when making many boss effects, the maximum entity limit on a TF2 game is 2048 and map entities are counted, recommend to do only 8 effects maximum.
// =============================================
// 		ANIMATION KEYVALUES		
// =============================================
// Determines the animations that are played on certain states of the boss. This is handled by certain states.
// Footstep intervals can be used in the advanced animations, or even outside for emergency purposes.
//
// "animation_idle" - A name of an animation that will play when the boss is at an idle state. For boss types 0 and 1, this will be their default animation.
// "animation_idle_playbackrate" - How fast the idle animation should play. Default is "1.0".
// "animation_idle_footstepinterval" - How frequently should a boss play a sound from "sound_footsteps" while playing the idle animation. For boss type 2.
//
// "animation_walk" - A name of an animation that will play when the boss is walking. Only for boss type 2.
// "animation_walk_playbackrate" - How fast the walk animation should play. Default is "1.0".
// "animation_walk_footstepinterval" - How frequently should a boss play a sound from "sound_footsteps" while playing the walk animation. For boss type 2.
//
// "animation_run" - A name of an animation that will play when the boss is running. Only for boss type 2.
// "animation_run_playbackrate" - How fast the run animation should play. Default is "1.0".
// "animation_run_footstepinterval" - How frequently should a boss play a sound from "sound_footsteps" while playing the run animation. For boss type 2.
//
// "animation_stun" - A name of an animation that will play when the boss is at a stunned state. Only for boss type 2.
// "animation_stun_playbackrate" - How fast the stun animation should play. Default is "1.0".
// "animation_stun_footstepinterval" - How frequently should a boss play a sound from "sound_footsteps" while playing the stun animation. For boss type 2.
//
// "animation_attack" - A name of an animation that will play when the boss is in attack state. Only for boss type 2.
// "animation_attack_playbackrate" - How fast the attack animation should play. Default is "1.0".
// "animation_attack_footstepinterval" - How frequently should a boss play a sound from "sound_footsteps" while playing the attack animation. For boss type 2.
//
// "animation_rage"	- A name of an animation that will play when the boss rages in a Boxing match. Only for boss type 2 and if its a Boxing match.
// "animation_rage_playbackrate" - How fast the rage animation should play. Default is "1.0".
//
// "animation_walkalert" - A name of an animation that will play when the boss is in alert and walking state. Only for boss type 2. Requires "use_alert_walking_animation" to be set to 1.
// "animation_walkalert_playbackrate" - How fast the alert walk animation should play. Default is "1.0".
//
// "animation_chaseinitial" - A name of an animation that will play when the boss is about to chase a player. Only for boss type 2. Requires "use_chase_initial_animation" to be set to 1 and "chase_initial_timer" to be set to anything greater than 0.
// "animation_chaseinitial_playbackrate" - How fast the chase initial animation should play. Default is "1.0".
//
// =============================================
// 		ADVANCED ANIMATIONS		
// =============================================
// Advanced Animations is more complex in nature compared to the traditional method of animations.
// Instead of using only one type of animation for their state, bosses are able to use up to 8 different configured animations of their choosing.
// Ontop of this, they are also able to use different animations in these blocks based on the difficulty.
// For this instance, for non-difficulty based advanced animations, we will borrow the Rakes profile.
//
//		"animations" // This is the main block of anims, this can be anywhere in the profiles main block. (Preferably we have this second from last).
//		{
//			"idle" // This is the block within the animations section that states the idle animations that could be available.
//			{
//				"1" // This is the number available for the boss to pick from, by standard, you must always have 1 for idle, walk & run.
//				{
//					"animation_idle"	"idle" // This is the name of the animation we are looking for when the boss selections this section.
//					"animation_idle_playbackrate"	"1.0" // This is the playrate of the animation linked to the idle animation.
//				}
//
//				"2" // Since we have 2 idle anims to pick from, the boss will cycle through these at random after each state change.
//				{
//					"animation_idle"	"idle_angry"
//					"animation_idle_playbackrate"	"1.0"
//				}
//			}
//
//			"walk"
//			{
//				"1"
//				{
//					"animation_walk"	"walk_all"
//					"animation_walk_playbackrate"	"1.5"
//					"animation_walk_footstepinterval"	"0.5" //This value is optional but needed for sound_footsteps.
//				}
//			}
//			"walkalert" //This is if we want bosses to play an animation if they are alert. Requires "use_alert_walking_animation" to be set to 1.
//			{
//				"1"
//				{
//					"animation_walkalert"	"crouch_walk_all"
//					"animation_walkalert_playbackrate"	"1.5"
//					"animation_walk_footstepinterval"	"0.5" //This works on walk alerts.
//				}
//			}
//
//			"run"
//			{
//				"1"
//				{
//					"animation_run"		"Run"
//					"animation_run_playbackrate"	"1.5"
//					"animation_run_footstepinterval"	"0.25" //This value is optional but needed for sound_footsteps.
//				}
//			}
//
//			"stun" // This section contains our stun animations, which is an optional thing to include but is required if the boss is stunnable.
//			{
//				"1" // NOTE: If you are using more than 1 stun animation, make sure they are all in sync with the duration of the stun.
//				{
//					"animation_stun"	"BR2_Roar"
//					"animation_stun_playbackrate"	"0.75" 
//				}
//			}
//
//			"attack" // This is the section that contains our attack animations, however, unlike before, these are tied exclusively to one attack each.
//			{
//				"1" // This does however, unlike the stun animations, doesn't not require them to be synced to just one timer, instead, they are syncing to the attack times of each attack number you provide.
//				{
//					"animation_attack"	"Melee"
//					"animation_attack_playbackrate"	"1.5"
//				}
//
//				"2"
//				{
//					"animation_attack"	"BR2_Attack"
//					"animation_attack_playbackrate"	"2.15"
//				}
//			}
//
//			"chaseinitial" // This section can be used to set an animation for bosses that are about to chase a player. Requires "use_chase_initial_animation" to be set to 1 and "chase_initial_timer" to be set to anything greater than 0.
//			{
//				"1"
//				{
//					"animation_chaseinitial"			"IdleAngryToShoot"
//					"animation_chaseinitial_playbackrate"	"1.0"
//				}
//			}
//
//			"rage" // This section can only be used if "boxing_boss" is set to 1 and "rage_timer" is greater than 0. Its also only limited to Boxing matches.
//			{
//				"1"
//				{
//					"animation_rage"	"rage"
//					"animation_rage_playbackrate"	"1.0"
//				}
//			}
//		}
//
// Currently some of the public bosses have been updated with the difficulty based animations. It is pretty straight forward to add to the bosses that don't utilize this system.
//
// Add into the same number as your desired animation with the _hard, _insane, _nightmare, & _apollyon prefixes for animations such as "animation_walk".
//
// NOTE: You will need to set "difficulty_affects_animations" to "1" in your boss profile in order to use difficulty based animations.
// NOTE2: This only applies for idle, walk, walk alert, and run animation sets, for everything else, it is completely ignored and no longer needed for all the other animations.
// NOTE3: You can use footstep intervals based on the difficulty for idle, walking, alert walking, and running. Make sure those values are set if you're gonna use difficulty affects animations and footsteps.
// NOTE4: If any of these values have blank values, then it will use the difficulty before what it is, so if its Nightmare and there is no animation for Nightmare, it'll use the Insane animation, goes all the way down to Normal.
//
//				"1" // Example
//				{
//					"animation_walk"			"walk"
//					"animation_walk_playbackrate"		"1.0"
//					"animation_walk_footstepinterval"	"0.5"
//
//					"animation_walk_hard"			"walk"
//					"animation_walk_hard_playbackrate"	"1.25"
//					"animation_walk_hard_footstepinterval"	"0.45"
//
//					"animation_walk_insane"			"walk"
//					"animation_walk_insane_playbackrate"	"1.5"
//					"animation_walk_insane_footstepinterval"	"0.4"
//
//					"animation_walk_nightmare"		"walk"
//					"animation_walk_nightmare_playbackrate"	"1.75"
//					"animation_walk_nightmare_footstepinterval"	"0.35"
//
//					"animation_walk_apollyon"		"walk"
//					"animation_walk_apollyon_playbackrate"	"2.25"
//					"animation_walk_apollyon_footstepinterval"	"0.25"
//				}
// =============================================================
// 		ADVANCED ANIMATIONS - ATTACK DATA		
// =============================================================
//
// This system can only be used if you have your advanced animations set up.
// Keep in mind that there is no backwards compatability between the advanced animation system and the straight forward singular animation.
// However, this system uses the same keyvalues so bringing them over to advanced animations isn't difficult.
//
//		"attacks" // This is the block where we keep our attack data. (Prefer to keep this at the bottom of the profile)
//		{
//			"1" // This is the number for the attack, it must match the one provided in the attack section under attack animations.
//			{
//				"attack_delay"	"0.0"
//				"attack_range"	"100.0"
//				"attack_begin_range"	"75" // Closer Attacks have priority.
//				"attack_damage"	"5.0"
//				"attack_damagetype"	"1048576"
//				"attack_punchvel"	"60 60 1"
//				"attack_endafter" "0.1"
//				"attack_spread"	"45"
//				"attack_cooldown"	"1.0" // Unless they are on cooldown.
//				"attack_repeat"		"0"
//				"attack_disappear_upon_damaging"	"0" // Should I despawn after an attack?
//			}
//
//			"2"
//			{
//				"attack_delay"	"0.10"
//				"attack_range"	"200.0"
//				"attack_begin_range"	"100"
//				"attack_damage"	"10.0"
//				"attack_damagetype"	"1048576"
//				"attack_punchvel"	"60 60 1"
//				"attack_endafter" "0.50"
//				"attack_spread"	"90"
//				"attack_cooldown"	"2.0"
//				"attack_repeat"		"0"
//				"attack_disappear_upon_damaging"	"0"
//			}	
//		}
//
//	--- REPEATING ATTACKS ---
//
// Repeating attacks use the advanced animation system to achieve this. It is very similar to the setup above, but the keyvalues have different affects on the input.
// To use this properly, simply take the attack_delay time and multiply it by however many times you want it, so if you want 4 times, you multiply attack_delay by 4 and put the result in attack_endafter.
//
//		"attacks"
//		{
//			"1"
//			{
//				"attack_delay"	"0.6" // How long in seconds, should the attack be repeated.
//				"attack_range"	"240.0"
//				"attack_begin_range"	"100"
//				"attack_damage"	"8.0"
//				"attack_damagetype"	"1114112"
//				"attack_punchvel"	"12 15 5"
//				"attack_endafter" "3.0" // How long should the attack last for until we stop repeating. Always end with enough time before the next repeat can occur.
//				"attack_spread"	"360"
//				"attack_repeat"	"1" // Enables repeating attack behavior for this attack index only, otherwise, it will be normal.
//			}
//		}
//
// =====================================================
// 			BOSS ATTRIBUTES				
// =====================================================
//
// Boss Attributes are specific settings on a boss that change certain aspects about the boss.
// These can range from stat changes to the bosses to impacts to the bosses victims.
//
// An example of attributes in the boss profile look like this.
//
//		"attributes"
//		{
//			"always look at target" // Name of the attribute.
//			{
//				"value"	"1" // Value to set on the attribute. Always seen as float values.
//			}
//
//			"reduced speed on look"
//			{
//				"value"	"0.6"
//			}
//
//			"reduced walk speed on look"
//			{
//				"value"	"0.4"
//			}
//		}
//
// Here is a list of all the current attributes in the gamemode.
// NOTE: An Attribute Value must be set to 0.0 or higher for it to work for the boss.
//
// Attribute - "reduced speed on look" - Percentage - Determines how much the bosses speed should be slowed down by. Values higher than 1.0 speed up the boss instead.
// Attribute - "reduced walk speed on look" - Percentage - Determines how much the bosses walk speed should be slowed down by. Values higher than 1.0 speed up the boss instead.
// Attribute - "add stun health on stun" - Value - Determines how much stun health to add when the boss gets stunned.
// Attribute - "always look at target" - State - Determines if the boss should always look at their target.
// Attribute - "always look at target while chasing" - State - Determines if the boss should always look at their target, but only while it is chasing.
// Attribute - "always look at target while attacking" - State - Determines if the boss should always look at their target, but only while it is attacking.
// Attribute - "bleed player on hit", - State - Determines if bleed damage should be applied to those the boss successfully hits.
// Attribute - "ignite player on hit" - State - Determines if successfully hit targets should be ignited.
// Attribute - "ignite player on scare" - State - Determines if players should be ignited upon being scared by the boss.
// Attribute - "mark player for death on scare" - State - Determines if players should be marked for death upon being scared by the boss.
// Attribute - "silent mark player for death on scare" - State - Determines if players should be silently marked for death upon being scared by the boss.
// Attribute - "ignite player on death" - State - Determines if the bosses victim should be ignited upon death.
// Attribute - "add speed on stun" - Value - Determines how much speed to add to the boss upon being stunned.
// Attribute - "add max speed on stun" - Value - Determines how much max speed to add to the boss upon being stunned.
// Attribute - "chase target on scare" - Value - Determines if the boss should chase a target upon scaring them.
//
// =====================================================
// 		CHAT MESSAGE UPON DEATH			
// =====================================================
//
// This is a basic, print to chat function that prints the Clients Name followed by a message from the bosses profile.
// It is fairly straight forward, yet could add some degree of personality or charm to the boss in question.
//
// This is how it looks in the profiles, this is a sample taken from Slender's profile.
// These messages will always print if the boss is considered as the inflictor upon the clients death.
//
// An example of how this would appear in would would be "[SF2] Player got killed by Slender."
//
// 		"chat_message_upon_death"
//		{
//			"1"	"was caught by Slender."
//			"2"	"angered Slender by taking his pages."
//			"3"	"decided it was a good idea to take on Slender."
//			"4"	"didn't know what they got themselves into."
//		}
//
//
// There is also "chat_message_upon_death_prefix" which allows you to change the prefix of the message.
// By default this uses "[SF2]", but can be changed to another prefix, such as "[SCP]".
//
// However, if this is missing from the profile. It will not attempt to print any messages.
// Ontop of that, if the boss is allowed to attack blue, it will also stop printing these messages to avoid spam.
// =============================================================
// 		CLOAK ABILITY		
// =============================================================
//
// Allows bosses to pop in and out of existance when chasing a target. They will pop back in whenever they are not chasing.
// Also has a cooldown setting so they are not, constantly invis, if it makes them less painful to play against.
//
// "cloak_enable" - Boolean (0/1) - Determines if the boss uses the cloak ability or not when chasing targets.
// "cloak_cooldown" - Float - Determines how long the cloak ability goes into cooldown for. Default is "8.0" seconds.
// "cloak_cooldown_easy" - Same as "cloak_cooldown", except in Easy difficulty. Default is the value of Normal.
// "cloak_cooldown_hard" - Same as "cloak_cooldown", except in Hard difficulty. Default is the value of Normal.
// "cloak_cooldown_insane" - Same as "cloak_cooldown", except in Insane difficulty. Default is the value of Hardcore.
// "cloak_cooldown_nightmare" - Same as "cloak_cooldown", except in Nightmare difficulty. Default is the value of Insane.
// "cloak_cooldown_apollyon" - Same as "cloak_cooldown", except in Apollyon difficulty. Default is the value of Nightmare.
//
// "cloak_range" - Float - Determines the range that needs to be between the boss and the player to allow cloaking. Default is "250.0".
// "cloak_range_easy" - Same as "cloak_range", except in Easy difficulty. Default is the value of Normal.
// "cloak_range_hard" - Same as "cloak_range", except in Hard difficulty. Default is the value of Normal.
// "cloak_range_insane" - Same as "cloak_range", except in Insane difficulty. Default is the value of Hardcore.
// "cloak_range_nightmare" - Same as "cloak_range", except in Nightmare difficulty. Default is the value of Insane.
// "cloak_range_apollyon" - Same as "cloak_range", except in Apollyon difficulty. Default is the value of Nightmare.
//
// "cloak_particle" - String (256) - Determines the particle that appears when the boss cloaks & decloaks. Defaults to "drg_cow_explosioncore_charged_blue".
// "cloak_on_sound" - String (256) - Determines the sound that plays when the boss cloaks. Defaults to "weapons/medi_shield_deploy.wav".
// "cloak_off_sound" - String (256) - Determines the sound that plays when the boss decloaks. Defaults to "weapons/medi_shield_retract.wav".
//
// =============================================================
// 		DAMAGE EFFECTS
// =============================================================
// Upon attacking a boss, these values will be checked to determin if the boss should apply some form of condition to the player.
// Particles will not show if any of these duration values are set to 0, useful for Boxing matches for difficulty phases.
//
// "player_damage_effects" - Boolean (0/1) - Determines if a boss has damage effects or not, this must be set to 1 if you intend to use Damage Effects! Defaults to "0".
// "player_attach_particle" - Boolean (0/1) - Determines if all particles spawned by the boss should parent to the player or not. Defaults to "1".
//
// "player_stun_type" - Int (0 > 3) - Determines, Stun Condition that is applied to the player. Defaults to "0". 
// Stun Type Values for "player_stun_type" are the following: (Affects Stun & Electrocute on Hit.)
// ----------------------------------------------------------
//
// 0 = Do Nothing
// 1 = Slow Condition Only
// 2 = Lower State + Slow Condition
// 3 = Full Stun + Slow Condition
//
// "player_jarate_on_hit" - Boolean (0/1) - Determines if the boss should apply the Jarate Condition to the player upon hit. Defaults to "0".
// "player_jarate_attack_indexs" - Int (Multi-Number) - Determines what attack index(s) should Jarate Effects be applied to. Defaults to 1, accepts multiple numbers. For example, 12 or 23. Cannot use attack indexes above 9.
// "player_jarate_particle" - String (256) - Determines the name of the particle that spawns when this effect is applied. Defaults to "peejar_impact".
// "player_jarate_sound" - String (256) - Determines the sound that will play when this effect is applied. Defaults to "weapons/jar_single.wav".
// "player_jarate_duration" - Float - Determines how long the player should be in the Jarate Condition for, defaults to 0 so you will need to set this.
// "player_jarate_duration_easy" - Same as "player_jarate_duration", except in Easy difficulty. If not set it will use the value in "player_jarate_duration" instead.
// "player_jarate_duration_hard" - Same as "player_jarate_duration", except in Hard difficulty. If not set it will use the value in "player_jarate_duration" instead.
// "player_jarate_duration_insane" - Same as "player_jarate_duration", except in Insane difficulty. If not set it will use the value in "player_jarate_duration_hard" instead.
// "player_jarate_duration_nightmare" - Same as "player_jarate_duration", except in Nightmare difficulty. If not set it will use the value in "player_jarate_duration_insane" instead.
// "player_jarate_duration_apollyon" - Same as "player_jarate_duration", except in Apollyon difficulty. If not set it will use the value in "player_jarate_duration_nightmare" instead.
//
// -----------------------------------------------------------------------------------------------------------------------------------------------------
//
// "player_milk_on_hit" - Boolean (0/1) - Determines if the boss should apply the Milk Condition to the player upon hit. Defaults to "0".
// "player_milk_attack_indexs" - Int (Multi-Number) - Determines what attack index(s) should Milk Effects be applied to. Defaults to 1, accepts multiple numbers. For example, 12 or 23. Cannot use attack indexes above 9.
// "player_milk_particle" - String (256) - Determines the name of the particle that spawns when this effect is applied. Defaults to "peejar_impact_milk".
// "player_milk_sound" - String (256) - Determines the sound that will play when this effect is applied. Defaults to "weapons/jar_single.wav".
//
// "player_milk_duration" - Float - Determines how long the player should be milked for, defaults to 0 so you will need to set this.
// "player_milk_duration_easy" - Same as "player_milk_duration", except in Easy difficulty. If not set it will use the value in "player_milk_duration" instead.
// "player_milk_duration_hard" - Same as "player_milk_duration", except in Hard difficulty. If not set it will use the value in "player_milk_duration" instead.
// "player_milk_duration_insane" - Same as "player_milk_duration", except in Insane difficulty. If not set it will use the value in "player_milk_duration_hard" instead.
// "player_milk_duration_nightmare" - Same as "player_milk_duration", except in Nightmare difficulty. If not set it will use the value in "player_milk_duration_insane" instead.
// "player_milk_duration_apollyon" - Same as "player_milk_duration", except in Apollyon difficulty. If not set it will use the value in "player_milk_duration_nightmare" instead.
//
// "player_gas_on_hit" - Boolean (0/1) - Determines if the boss should apply the Gas Condition to the player upon hit. Defaults to "0".
// "player_gas_attack_indexs" - Int (Multi-Number) Determines what attack index(s) should Gas Effects be applied to. Defaults to 1, accepts multiple numbers. For example, 12 or 23. Cannot use attack indexes above 9.
// "player_gas_particle" - String (256) - Determines the name of the particle that spawns when this effect is applied. Defaults to "gas_can_impact_blue".
// "player_gas_sound" - String (256) - Determines the sound that will play when this effect is applied. Defaults to "weapons/jar_single.wav".
// "player_gas_duration" - Float - Determines how long the player should be gased for, defaults to 0 so you will need to set this.
// "player_gas_duration_easy" - Same as "player_gas_duration", except in Easy difficulty. If not set it will use the value in "player_gas_duration" instead.
// "player_gas_duration_hard" - Same as "player_gas_duration", except in Hard difficulty. If not set it will use the value in "player_gas_duration" instead.
// "player_gas_duration_insane" - Same as "player_gas_duration", except in Insane difficulty. If not set it will use the value in "player_gas_duration_hard" instead.
// "player_gas_duration_nightmare" - Same as "player_gas_duration", except in Nightmare difficulty. If not set it will use the value in "player_gas_duration_insane" instead.
// "player_gas_duration_apollyon" - Same as "player_gas_duration", except in Apollyon difficulty. If not set it will use the value in "player_gas_duration_nightmare" instead.
//
// -----------------------------------------------------------------------------------------------------------------------------------------------------
//
// "player_mark_on_hit" - Boolean (0/1) - Determines if the boss should apply the Marked for Death Condition to the player upon hit. Defaults to "0".
// "player_mark_attack_indexs" - Int (Multi-Number) Determines what attack index(s) should Mark Effects be applied to. Defaults to 1, accepts multiple numbers. For example, 12 or 23. Cannot use attack indexes above 9.
// "player_mark_duration" - Float- Determines how long the player should be marked for, defaults to 0 so you will need to set this.
// "player_mark_duration_easy" - Same as "player_mark_duration", except in Easy difficulty. If not set it will use the value in "player_mark_duration" instead.
// "player_mark_duration_hard" - Same as "player_mark_duration", except in Hard difficulty. If not set it will use the value in "player_mark_duration" instead.
// "player_mark_duration_insane" - Same as "player_mark_duration", except in Insane difficulty. If not set it will use the value in "player_mark_duration_hard" instead.
// "player_mark_duration_nightmare" - Same as "player_mark_duration", except in Nightmare difficulty. If not set it will use the value in "player_mark_duration_insane" instead.
// "player_mark_duration_apollyon" - Same as "player_mark_duration", except in Apollyon difficulty. If not set it will use the value in "player_mark_duration_nightmare" instead.
//
// -----------------------------------------------------------------------------------------------------------------------------------------------------
//
// "player_ignite_on_hit" - Boolean (0/1) - Determines if the boss should apply the Ignite Condition to the player upon hit. Defaults to "0".
// "player_ignite_attack_indexs" - Int (Multi-Number) - Determines what attack index(s) should Ignite Effects be applied to. Defaults to 1, accepts multiple numbers. For example, 12 or 23. Cannot use attack indexes above 9.
// "player_ignite_delay" - Float- Determines how long it will take before the player is ignited after hit, min value must be 0.1 second. Best suited to go with other damage effects.
// "player_ignite_delay_easy" - Same as "player_ignite_delay", except in Easy difficulty. If not set it will use the value in "player_ignite_delay" instead.
// "player_ignite_delay_hard" - Same as "player_ignite_delay", except in Hard difficulty. If not set it will use the value in "player_ignite_delay" instead.
// "player_ignite_delay_insane" - Same as "player_ignite_delay", except in Insane difficulty. If not set it will use the value in "player_ignite_delay_hard" instead.
// "player_ignite_delay_nightmare" - Same as "player_ignite_delay", except in Nightmare difficulty. If not set it will use the value in "player_ignite_delay_insane" instead.
// "player_ignite_delay_apollyon" - Same as "player_ignite_delay", except in Apollyon difficulty. If not set it will use the value in "player_ignite_delay_nightmare" instead.
//
// -----------------------------------------------------------------------------------------------------------------------------------------------------
//
// "player_stun_on_hit" - Boolean (0/1) - Determines if the boss should apply the Stun Condition to the player upon hit. Defaults to "0".
// "player_stun_attack_indexs" - Int (Multi-Number) - Determines what attack index(s) should Stun Effects be applied to. Defaults to 1, accepts multiple numbers. For example, 12 or 23. Cannot use attack indexes above 9.
// "player_stun_particle" - String (256) - Determines the name of the particle that spawns when this effect is applied. Defaults to "xms_icicle_melt".
// "player_stun_sound" - String (256) - Determines the sound that will play when this effect is applied. Defaults to "weapons/icicle_freeze_victim_01.wav".
//
// "player_stun_duration" - Float - Determines how long the player should be stunned for, defaults to 0 so you will need to set this.
// "player_stun_duration_easy" - Same as "player_stun_duration", except in Easy difficulty. If not set it will use the value in "player_stun_duration" instead.
// "player_stun_duration_hard" - Same as "player_stun_duration", except in Hard difficulty. If not set it will use the value in "player_stun_duration" instead.
// "player_stun_duration_insane" - Same as "player_stun_duration", except in Insane difficulty. If not set it will use the value in "player_stun_duration_hard" instead.
// "player_stun_duration_nightmare" - Same as "player_stun_duration", except in Nightmare difficulty. If not set it will use the value in "player_stun_duration_insane" instead.
// "player_stun_duration_apollyon" - Same as "player_stun_duration", except in Apollyon difficulty. If not set it will use the value in "player_stun_duration_nightmare" instead.
//
// "player_stun_slowdown" - Float - Determines in percent value, how much a player should be slowed down by. NOTE: Values below 50% tend to play the player travel faster.
// "player_stun_slowdown_easy" - Same as "player_stun_slowdown", except in Easy difficulty. If not set it will use the value in "player_stun_slowdown" instead.
// "player_stun_slowdown_hard" - Same as "player_stun_slowdown", except in Hard difficulty. If not set it will use the value in "player_stun_slowdown" instead.
// "player_stun_slowdown_insane" - Same as "player_stun_slowdown", except in Insane difficulty. If not set it will use the value in "player_stun_slowdown_hard" instead.
// "player_stun_slowdown_nightmare" - Same as "player_stun_slowdown", except in Nightmare difficulty. If not set it will use the value in "player_stun_slowdown_insane" instead.
// "player_stun_slowdown_apollyon" - Same as "player_stun_slowdown", except in Apollyon difficulty. If not set it will use the value in "player_stun_slowdown_nightmare" instead.
//
// -----------------------------------------------------------------------------------------------------------------------------------------------------
//
// "player_bleed_on_hit" - Boolean (0/1) - Determines if the boss should apply the Bleed Condition to the player upon hit. Defaults to "0".
// "player_bleed_attack_indexs" - Int (Multi-Number) Determines what attack index(s) should Bleed Effects be applied to. Defaults to 1, accepts multiple numbers. For example, 12 or 23. Cannot use attack indexes above 9.
// "player_bleed_duration" Determines how long the player should be bleed for, defaults to 0 so you will need to set this.
// "player_bleed_duration_easy" - Same as "player_bleed_duration", except in Easy difficulty. If not set it will use the value in "player_bleed_duration" instead.
// "player_bleed_duration_hard" - Same as "player_bleed_duration", except in Hard difficulty. If not set it will use the value in "player_bleed_duration" instead.
// "player_bleed_duration_insane" - Same as "player_bleed_duration", except in Insane difficulty. If not set it will use the value in "player_bleed_duration_hard" instead.
// "player_bleed_duration_nightmare" - Same as "player_bleed_duration", except in Nightmare difficulty. If not set it will use the value in "player_bleed_duration_insane" instead.
// "player_bleed_duration_apollyon" - Same as "player_bleed_duration", except in Apollyon difficulty. If not set it will use the value in "player_bleed_duration_nightmare" instead.
//
// -----------------------------------------------------------------------------------------------------------------------------------------------------
//
// "player_electric_slow_on_hit" - Boolean (0/1) - Determines if the boss should electrocute the player. Defaults to "0".
// "player_electrocute_attack_indexs" - Int (Multi-Number) Determines what attack index(s) should Electrocute Effects be applied to. Defaults to 1, accepts multiple numbers. For example, 12 or 23. Cannot use attack indexes above 9.
// "player_electric_red_particle" - String (256) Determines the name of the particle that spawns when this effect is applied for RED Players. Defaults to "electrocuted_gibbed_red".
// "player_electric_blue_particle" - String (256) Determines the name of the particle that spawns when this effect is applied for BLUE Players. Defaults to "electrocuted_gibbed_red".
//
// "player_electric_slow_duration" Determines how long the player should be slowed for, defaults to 0 so you will need to set this.
// "player_electric_slow_duration_easy" - Same as "player_slow_duration", except in Easy difficulty. If not set it will use the value in "player_electric_slow_duration" instead.
// "player_electric_slow_duration_hard" - Same as "player_slow_duration", except in Hard difficulty. If not set it will use the value in "player_electric_slow_duration" instead.
// "player_electric_slow_duration_insane" - Same as "player_slow_duration", except in Insane difficulty. If not set it will use the value in "player_electric_slow_duration_hard" instead.
// "player_electric_slow_duration_nightmare" - Same as "player_slow_duration", except in Nightmare difficulty. If not set it will use the value in "player_electric_slow_duration_insane" instead.
// "player_electric_slow_duration_apollyon" - Same as "player_slow_duration", except in Apollyon difficulty. If not set it will use the value in "player_electric_slow_duration_nightmare" instead.
//
// "player_electric_slow_slowdown" Determines in percent value, how much a player should be slowed down by. NOTE: Values below 50% tend to play the player travel faster.
// "player_electric_slow_slowdown_easy" - Same as "player_electric_slow_slowdown", except in Easy difficulty. If not set it will use the value in "player_electric_slow_slowdown" instead.
// "player_electric_slow_slowdown_hard" - Same as "player_electric_slow_slowdown", except in Hard difficulty. If not set it will use the value in "player_electric_slow_slowdown" instead.
// "player_electric_slow_slowdown_insane" - Same as "player_electric_slow_slowdown", except in Insane difficulty. If not set it will use the value in "player_electric_slow_slowdown_hard" instead.
// "player_electric_slow_slowdown_nightmare" - Same as "player_electric_slow_slowdown", except in Nightmare difficulty. If not set it will use the value in "player_electric_slow_slowdown_insane" instead.
// "player_electric_slow_slowdown_apollyon" - Same as "player_electric_slow_slowdown", except in Apollyon difficulty. If not set it will use the value in "player_electric_slow_slowdown_nightmare" instead.
//
// -----------------------------------------------------------------------------------------------------------------------------------------------------
//
// "player_smite_on_hit" - Boolean (0/1) - Determines if the boss can smite the player upon damaging them, this will result in instant death! Defaults to "0".
// "player_smite_attack_indexs" - Int (Multi-Number) - Determines what attack index(s) should Smite Effects be applied to. Defaults to 1, accepts multiple numbers. For example, 12 or 23. Cannot use attack indexes above 9.
// "player_smite_message" - Boolean (0/1) - Determines if the boss can play global ambient sounds and print fake messages to chat. Defaults to "0".
// "player_smite_damage" - Float - Determines the amount of damage to apply to the player when smited. Stacks with boss attacks. Defaults to "9001.0".
// "player_smite_damage_type" - Int - Determines the damage type when applying damage from smite. Defaults to Crit Damage Type. (Because we're mean, yes).
// "player_smite_color_r" - Int (0 > 255) - Determines the RED value of the Smite Color. Defaults to "255"
// "player_smite_color_g" - Int (0 > 255) - Determines the GREEN value of the Smite Color. Defaults to "255"
// "player_smite_color_b" - Int (0 > 255) - Determines the BLUE value of the Smite Color. Defaults to "255"
// "player_smite_transparency" - Int (0 > 255) - Determines the transparency/alpha value of the Smite Color. Defaults to "255"
//
// =====================================================================
// 		PROJECTILE ABILITIES	
// =====================================================================
//
// Provides the boss with the ability to either spawn projectiles. Supports Fireballs, Iceballs, Rockets, Grenades, Sentry Rockets, Arrows, and Cow Mangler projectiles.
//
// -----------------------------------------------------------------------------------------------------------------------------------------------------
//
// "projectile_enable" - Boolean (0/1) - Determines if the boss should be able to spawn fireballs. Defaults to "0".
//
// "projectile_cooldown_min" - Float - Determines the min cooldown time that is applied after a boss spawns a projectile. Defaults to "1.0" seconds.
// "projectile_cooldown_min_easy" - Same as "projectile_cooldown_min", except in Easy difficulty. If not set, value will be set to what "projectile_cooldown_min" is set to.
// "projectile_cooldown_min_hard" - Same as "projectile_cooldown_min", except in Hard difficulty. If not set, value will be set to what "projectile_cooldown_min" is set to.
// "projectile_cooldown_min_insane" - Same as "projectile_cooldown_min", except in Insane difficulty. If not set, value will be set to what "projectile_cooldown_min_hard" is set to.
// "projectile_cooldown_min_nightmare" - Same as "projectile_cooldown_min", except in Nightmare difficulty. If not set, value will be set to what "projectile_cooldown_min_insane" is set to.
// "projectile_cooldown_min_apollyon" - Same as "projectile_cooldown_min", except in Apollyon difficulty. If not set, value will be set to what "projectile_cooldown_min_nightmare" is set to.
//
// "projectile_cooldown_max" - Float - Determines the max cooldown time that is applied after a boss spawns a projectile. Defaults to "2.0" seconds.
// "projectile_cooldown_max_easy" - Same as "projectile_cooldown_max", except in Easy difficulty. If not set, value will be set to what "projectile_cooldown_max" is set to.
// "projectile_cooldown_max_hard" - Same as "projectile_cooldown_max", except in Hard difficulty. If not set, value will be set to what "projectile_cooldown_max" is set to.
// "projectile_cooldown_max_insane" - Same as "projectile_cooldown_max", except in Insane difficulty. If not set, value will be set to what "projectile_cooldown_max_hard" is set to.
// "projectile_cooldown_max_nightmare" - Same as "projectile_cooldown_max", except in Nightmare difficulty. If not set, value will be set to what "projectile_cooldown_max_insane" is set to.
// "projectile_cooldown_max_apollyon" - Same as "projectile_cooldown_max", except in Apollyon difficulty. If not set, value will be set to what "projectile_cooldown_max_nightmare" is set to.
//
// "projectile_speed" - Float - Determines how fast the fireball will travel towards a target once spawned. Defaults to "400.0".
// "projectile_speed_easy" - Same as "projectile_speed", except in Easy difficulty. If not set, value will be set to what "projectile_speed" is set to.
// "projectile_speed_hard" - Same as "projectile_speed", except in Hard difficulty. If not set, value will be set to what "projectile_speed" is set to.
// "projectile_speed_insane" - Same as "projectile_speed", except in Insane difficulty. If not set, value will be set to what "projectile_speed_hard" is set to.
// "projectile_speed_nightmare" - Same as "projectile_speed", except in Nightmare difficulty. If not set, value will be set to what "projectile_speed_insane" is set to.
// "projectile_speed_apollyon" - Same as "projectile_speed", except in Apollyon difficulty. If not set, value will be set to what "projectile_speed_nightmare" is set to.
//
// "projectile_damage" - Float - Determines how much damage players will take from the fireball when it explodes. Defaults to "50.0".
// "projectile_damage_easy" - Same as "projectile_damage", except in Easy difficulty. If not set, value will be set to what "projectile_damage" is set to.
// "projectile_damage_hard" - Same as "projectile_damage", except in Hard difficulty. If not set, value will be set to what "projectile_damage" is set to.
// "projectile_damage_insane" - Same as "projectile_damage", except in Insane difficulty. If not set, value will be set to what "projectile_damage_hard" is set to.
// "projectile_damage_nightmare" - Same as "projectile_damage", except in Nightmare difficulty. If not set, value will be set to what "projectile_damage_insane" is set to.
// "projectile_damage_apollyon" - Same as "projectile_damage", except in Apollyon difficulty. If not set, value will be set to what "projectile_damage_nightmare" is set to.
//
// "projectile_damageradius" - Float - Determines how far the explosion from the projectile should reach. Defaults to "128.0". Only works on grenades at the moment.
// "projectile_damageradius_easy" - Same as "projectile_damageradius", except in Easy difficulty. If not set, value will be set to what "projectile_damageradius" is set to.
// "projectile_damageradius_hard" - Same as "projectile_damageradius", except in Hard difficulty. If not set, value will be set to what "projectile_damageradius" is set to.
// "projectile_damageradius_insane" - Same as "projectile_damageradius", except in Insane difficulty. If not set, value will be set to what "projectile_damageradius_hard" is set to.
// "projectile_damageradius_nightmare" - Same as "projectile_damageradius", except in Nightmare difficulty. If not set, value will be set to what "projectile_damageradius_insane" is set to.
// "projectile_damageradius_apollyon" - Same as "projectile_damageradius", except in Apollyon difficulty. If not set, value will be set to what "projectile_damageradius_nightmare" is set to.
//
// "projectile_pos_number_min" - Int - Determines the min possible positions for the projectile to spawn at. Defaults to "1".
// "projectile_pos_number_max" - Int - Determines the max possible positions for the projectile to spawn at. Defaults to "1".
// "projectile_pos_offset_#" - Vector - Determines the position of the projectile when it spawns. Defaults to "0 0 0". Supports random positions based on above settings. Not available at the moment.
//
// "projectile_pos_offset" - Vector - Determines the single position of the projectile when it spawns. Defaults to "0 0 0". Use this for now.
//
// "projectile_type" - Int (0 > 6) - Determines the type that the fireball should be when spawning and hitting a target. Defaults to "0" for Fireball, "1" for Iceball, "2" for Rockets, "3" for Grenades, "4" for Sentry Rockets, "5" for Arrows, "6" for direct Cow Mangler shots.
//
// "projectile_iceslow_duration" - Float - Determines how long the player should be slowed for, when hit by an Iceball. Defaults to "2.0" seconds. Requires "projectile_type" to be set to 1.
// "projectile_iceslow_duration_easy" - Same as "fireball_iceslow_duration", except in Easy difficulty. If not set, value will be set to what "projectile_iceslow_duration" is set to.
// "projectile_iceslow_duration_hard" - Same as "fireball_iceslow_duration", except in Hard difficulty. If not set, value will be set to what "projectile_iceslow_duration" is set to.
// "projectile_iceslow_duration_insane" - Same as "fireball_iceslow_duration", except in Insane difficulty. If not set, value will be set to what "projectile_iceslow_duration_hard" is set to.
// "projectile_iceslow_duration_nightmare" - Same as "fireball_iceslow_duration", except in Nightmare difficulty. If not set, value will be set to what "projectile_iceslow_duration_insane" is set to.
// "projectile_iceslow_duration_apollyon" - Same as "fireball_iceslow_duration", except in Apollyon difficulty. If not set, value will be set to what "projectile_iceslow_duration_nightmare" is set to.
//
// "projectile_iceslow_percent" - Float - Determines how much the player should be slowed by, when hit by an Iceball. Defaults to "0.55". Requires "projectile_type" to be set to 1.
// "projectile_iceslow_percent_easy" - Same as "fireball_iceslow_percent", except in Easy difficulty. If not set, value will be set to what "projectile_iceslow_percent" is set to.
// "projectile_iceslow_percent_hard" - Same as "fireball_iceslow_percent", except in Hard difficulty. If not set, value will be set to what "projectile_iceslow_percent" is set to.
// "projectile_iceslow_percent_insane" - Same as "fireball_iceslow_percent", except in Insane difficulty. If not set, value will be set to what "projectile_iceslow_percent_hard" is set to.
// "projectile_iceslow_percent_nightmare" - Same as "fireball_iceslow_percent", except in Nightmare difficulty. If not set, value will be set to what "projectile_iceslow_percent_insane" is set to.
// "projectile_iceslow_percent_apollyon" - Same as "fireball_iceslow_percent", except in Apollyon difficulty. If not set, value will be set to what "projectile_iceslow_percent_nightmare" is set to.
//
// "fire_explode_sound" - String (256) - Determines the sound that plays when the fireball explodes. Defaults to ("misc/halloween/spell_fireball_impact.wav").
// "fire_shoot_sound" - String (256) - Determines the sound that plays when the fireball spawns. Defaults to ("misc/halloween/spell_fireball_cast.wav").
// "fire_iceball_slow_sound" - String (256) - Determines the sound that plays to victims hit by the iceball. Requires "projectile_type" to be set to 1. Defaults to ("weapons/icicle_freeze_victim_01.wav").
//
// "rocket_shoot_sound" - String (256) - Determines the sound that plays when the rocket spawns. Defaults to ("weapons/rocket_shoot.wav").
// "grenade_shoot_sound" - String (256) - Determines the sound that plays when the grenade spawns. Defaults to ("weapons/grenade_launcher_shoot.wav").
// "sentryrocket_shoot_sound" - String (256) - Determines the sound that plays when the sentry rocket spawns. Defaults to ("weapons/sentry_rocket.wav").
// "arrow_shoot_sound" - String (256) - Determines the sound that plays when the grenade spawns. Defaults to ("weapons/bow_shoot.wav").
// "mangler_shoot_sound" - String (256) - Determines the sound that plays when the grenade spawns. Defaults to ("weapons/cow_mangler_main_shot.wav").
//
// "use_gesture_shoot" - Boolean (0/1) - This allows bosses to play a layer animation in addition to whatever animation they are playing, so they can do a shooting animation, throwing animation, or any layer animation while playing their current animation.
// An example of layer animations are the TF2 classes shoot layer animations. This should only be used if bosses only have a projectile attack, stunning and attacking just don't work as well at the moment.
// "gesture_shootprojectile" - String (256) - Determines the layer animation the boss should play once it shoots a projectile.
//
// =============================================================
// 		TRAP ABILITIES	
// =============================================================
//
// Provides the boss with the ability to deploy traps to catch players.
// -----------------------------------------------------------------------------------------------------------------------------------------------------
// "traps_enabled" - Boolean (0/1) - Determins if the boss should be able to deploy traps. Defaults to "0".
//
// "trap_type" - Int - Determins the type of trap that the boss will deploy. Defaults to "0".
//
// Trap Type Values for "trap_type" are the following:
// ----------------------------------------------------------
// 0 = Bear Trap
//
// "trap_spawn_cooldown" - Float - Determins how long the cooldown should be for the bosses next trap deploy time. Defaults to "8.0" seconds.
// "trap_spawn_cooldown_easy" - Same as "trap_spawn_cooldown", except in Easy difficulty. If not set, value will be set to whatever "trap_spawn_cooldown" is set to.
// "trap_spawn_cooldown_hard" - Same as "trap_spawn_cooldown", except in Hard difficulty. If not set, value will be set to whatever "trap_spawn_cooldown" is set to.
// "trap_spawn_cooldown_insane" - Same as "trap_spawn_cooldown", except in Insane difficulty. If not set, value will be set to whatever "trap_spawn_cooldown_hard" is set to.
// "trap_spawn_cooldown_nightmare" - Same as "trap_spawn_cooldown", except in Nightmare difficulty. If not set, value will be set to whatever "trap_spawn_cooldown_insane" is set to.
// "trap_spawn_cooldown_apollyon" - Same as "trap_spawn_cooldown", except in Apollyon difficulty. If not set, value will be set to whatever "trap_spawn_cooldown_nightmare" is set to.
//
// =====================================================================
// 		RAID KEY VALUES	
// =====================================================================
//
// These key values should only be used if the boss is meant to be the main boss in a RAID map.
// -----------------------------------------------------------------------------------------------------------------------------------------------------
// "keydrop_enabled" - This is crucial for slender_boxing_ring, it drops a key whenever a boss is stunned, can be used on Boxing maps as well.
// "key_trigger" - What the key triggers once it is picked up by a player or picks itself up. Can be used on trigger_multiple for enabling, logic_relay for triggering, and func_door for opening.
// "key_model" - The model that should be set on the key, should be precached in mod_precache. Defaults to "models/demani_sf/key_australium.mdl"
// "healthbar" - Shows a health bar of the boss, once the health bar is active, the boss will not teleport any more.
// =====================================================================
// 		BOXING KEY VALUES	
// =====================================================================
//
// These key values should only be used if the boss is meant to be in a Boxing match.
// -----------------------------------------------------------------------------------------------------------------------------------------------------
// "boxing_boss" - Turns on all key values used for Boxing bosses.
// "rage_timer" - How long the boss should be invulnerable whenever it rages, how long it rages in general, and how long animation_rage should last for.
// "keydrop_enabled" - This is crucial for slender_boxing_ring, it drops a key whenever a boss is stunned, can be used on RAID maps as well.
// "key_trigger" - What the key triggers once it is picked up by a player or picks itself up. Can be used on trigger_multiple for enabling, logic_relay for triggering, and func_door for opening.
// Boxing Ring's key_trigger that is used for every Boxing boss should be sf2_escape_trigger.
// "key_model" - The model that should be set on the key, should be precached in mod_precache. Defaults to "models/demani_sf/key_australium.mdl". 
// The commonly used Boxing key model is models/workshop/player/items/heavy/jul13_heavy_weight_belt/jul13_heavy_weight_belt.mdl.
// "healthbar" - Shows a health bar of the boss, once the health bar is active, the boss will not teleport any more.